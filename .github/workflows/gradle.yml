# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: JUPJUP CD
on:
  push:
    branches: [ "develop" ]
    
permissions:
  contents: read


env: # 현재 스크립트에서 사용할 환경변수 정의
  S3_BUCKET_NAME: jupjup-bucket
  PROJECT_NAME: jupjup-server
  CODE_DEPLOY_APPLICATION_NAME: jupjup
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME : deploy-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Set up JDK 11 
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Grant execute permission for gradlew 
        run: chmod +x ./gradlew
        shell: bash
        
      - name : make applicaiton.yml
        run: |
          mkdir ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
        shell: bash
        
      - name: make application-prod.yml
        run: |
          touch ./src/main/resources/application-prod.yml
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-prod.yml
        shell: bash

      - name: Build with Gradle # 프로젝트 build
        run: ./gradlew clean build -x test
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$CODE_DEPLOY_APPLICATION_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APPLICATION_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $PROJECT_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
